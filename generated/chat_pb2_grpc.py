# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_pb2 as chat__pb2


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Chat = channel.unary_stream(
                '/Chat/Chat',
                request_serializer=chat__pb2.ChatRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatResponse.FromString,
                )
        self.CodeGenerationChat = channel.unary_stream(
                '/Chat/CodeGenerationChat',
                request_serializer=chat__pb2.CodeGenerationChatRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatResponse.FromString,
                )
        self.TranslatorChat = channel.unary_stream(
                '/Chat/TranslatorChat',
                request_serializer=chat__pb2.TranslatorChatRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatResponse.FromString,
                )


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Chat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CodeGenerationChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslatorChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Chat': grpc.unary_stream_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=chat__pb2.ChatRequest.FromString,
                    response_serializer=chat__pb2.ChatResponse.SerializeToString,
            ),
            'CodeGenerationChat': grpc.unary_stream_rpc_method_handler(
                    servicer.CodeGenerationChat,
                    request_deserializer=chat__pb2.CodeGenerationChatRequest.FromString,
                    response_serializer=chat__pb2.ChatResponse.SerializeToString,
            ),
            'TranslatorChat': grpc.unary_stream_rpc_method_handler(
                    servicer.TranslatorChat,
                    request_deserializer=chat__pb2.TranslatorChatRequest.FromString,
                    response_serializer=chat__pb2.ChatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Chat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Chat/Chat',
            chat__pb2.ChatRequest.SerializeToString,
            chat__pb2.ChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CodeGenerationChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Chat/CodeGenerationChat',
            chat__pb2.CodeGenerationChatRequest.SerializeToString,
            chat__pb2.ChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TranslatorChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Chat/TranslatorChat',
            chat__pb2.TranslatorChatRequest.SerializeToString,
            chat__pb2.ChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
